pipeline {
    agent any

    tools {
        jdk 'jdk-21' // This name must match the JDK installation name used in Jenkins Global Tool Configuration
    }
    environment {
        DOCKER_USERNAME = credentials('docker_username')
        DOCKER_PASSWORD = credentials('docker_password')
        IMAGE_VERSION = '1.1.0'
    }

    stages {
        stage('Build & Test') {
            steps {
                sh './gradlew clean build'
            }
        }

        stage('Tag image') {
            steps {
                script {
                    GIT_TAG = sh([script: 'git fetch --tag && git tag', returnStdout: true]).trim()
                    MAJOR_VERSION = sh([script: 'git tag | cut -d . -f 1', returnStdout: true]).trim()
                    MINOR_VERSION = sh([script: 'git tag | cut -d . -f 2', returnStdout: true]).trim()
                    PATCH_VERSION = sh([script: 'git tag | cut -d . -f 3', returnStdout: true]).trim()

                    def NEW_MINOR = MINOR_VERSION.toInteger() + 1
                    def NEW_TAG = "${MAJOR_VERSION}.${MINOR_VERSION}.${PATCH_VERSION}"

                    sh "doccker login -u ${DOCKER_USERNAME} -P ${DOCKER_PASSWORD}"
                    sh "docker build -t ${DOCKER_USERNAME}/hello-img:${NEW_TAG} ."
                    sh "docker push ${DOCKER_USERNAME}/hello-img:${NEW_TAG}"
                }

                withCredentials([
                    string(credentialsId: 'DOCKER_USERNAME', variable: 'DOCKER_USERNAME'),
                    string(credentialsId: 'DOCKER_PASSWORD', variable: 'DOCKER_PASSWORD'),
                ]) {
                    sh 'echo $DOCKER_USERNAME'
                }
            }
        }
    }
}
