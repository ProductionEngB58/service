pipeline {
    agent any

    tools {
        jdk 'jdk-21' // This name must match the JDK installation name used in Jenkins Global Tool Configuration
    }

    environment {
        DOCKER_USERNAME = credentials("DOCKER_USERNAME")
        DOCKER_PASSWORD = credentials("DOCKER_PASSWORD")
        GITHUB_TOKEN = credentials("github_token")
    }

    stages {
        stage('Build & Test') {
            steps {
                sh './gradlew clean build'
            }
        }

        stage('Tag image') {
            steps {
                script {
                    sh([script: 'git fetch --tags', returnStdout: true]).trim()
                    env.MAJOR_VERSION = sh([script: 'git tag | sort --version-sort | tail -1 | cut -d . -f 1', returnStdout: true]).trim()
                    env.MINOR_VERSION = sh([script: 'git tag | sort --version-sort | tail -1 | cut -d . -f 2', returnStdout: true]).trim()
                    env.PATCH_VERSION = sh([script: 'git tag | sort --version-sort | tail -1 | cut -d . -f 3', returnStdout: true]).trim()

                    // Fixing the version calculation
                    def minorVersion = env.MINOR_VERSION.toInteger() + 1
                    env.IMAGE_TAG = "${env.MAJOR_VERSION}.${minorVersion}.${env.PATCH_VERSION}"

                    sh """
                        echo \$DOCKER_PASSWORD | docker login -u \$DOCKER_USERNAME --password-stdin
                        docker build -t \$DOCKER_USERNAME/hello-img:\$IMAGE_TAG .
                        docker push \$DOCKER_USERNAME/hello-img:\$IMAGE_TAG
                    """
                    sh "git tag ${env.IMAGE_TAG}"
                    sh "git push https://\$GITHUB_TOKEN@github.com/\${DOCKER_USERNAME}/service.git ${env.IMAGE_TAG}"
                }
            }
        }

        stage('Deploy to Docker') {
            steps {
                script {
                    // Execute docker-compose up with the IMAGE_TAG environment variable
                    sh """
                        IMAGE_TAG=\${env.IMAGE_TAG} docker-compose up -d hello mongo
                    """
                }
            }
        }
    }
}
