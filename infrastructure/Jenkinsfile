pipeline {
    agent any

    tools {
        jdk 'jdk-21' 
    }

    stages {
        stage('Build & Test') {
            steps {
                sh './gradlew clean build'
            }
        }

        stage('Tag image') {
            steps {
                script {
                    def GIT_TAG = sh([script: 'git fetch --tag && git tag', returnStdout: true]).trim()
                    def MAJOR_VERSION = sh([script: 'git tag | cut -d . -f 1', returnStdout: true]).trim()
                    def MINOR_VERSION = sh([script: 'git tag | cut -d . -f 2', returnStdout: true]).trim()
                    def PATCH_VERSION = sh([script: 'git tag | cut -d . -f 3', returnStdout: true]).trim()

                    def NEW_MINOR = $((MINOR_VERSION + 1))
                    def NEW_TAG = "${MAJOR_VERSION}.${MINOR_VERSION}.${PATCH_VERSION}"

                    withCredentials([
                        string(credentialsId: 'DOCKER_USERNAME', variable: 'DOCKER_USERNAME'),
                        string(credentialsId: 'DOCKER_PASSWORD', variable: 'DOCKER_PASSWORD'),
                    ]) {
                        sh 'echo $DOCKER_USERNAME'
                        sh """
                            docker login -u \$DOCKER_USERNAME -p \$DOCKER_PASSWORD
                            docker build -t \$DOCKER_USERNAME/hello-img:$NEW_TAG .
                            docker push \$DOCKER_USERNAME/hello-img:$NEW_TAG
                        """
                    }
                }
            }
        }
    }
}
